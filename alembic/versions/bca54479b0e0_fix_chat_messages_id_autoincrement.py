"""Fix chat_messages id autoincrement

Revision ID: bca54479b0e0
Revises: e02f9005df35
Create Date: 2025-09-04 16:21:15.580274

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bca54479b0e0'
down_revision: Union[str, Sequence[str], None] = 'e02f9005df35'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('chat_rooms', 'final_disease_id',
               existing_type=sa.UUID(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.create_foreign_key(None, 'chat_rooms', 'diseases', ['final_disease_id'], ['id'], ondelete='SET NULL')
    op.alter_column('department_diseases', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('department_diseases', 'disease_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('department_diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('department_diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('departments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('departments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('equipment_diseases', 'equipment_subcategory_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('equipment_diseases', 'disease_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('equipment_diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('equipment_diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_departments', 'hospital_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('hospital_departments', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('hospital_departments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_departments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_equipment', 'hospital_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('hospital_equipment', 'equipment_subcategory_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('hospital_equipment', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('1'))
    op.alter_column('hospital_equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_equipment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_foreign_key(None, 'hospital_recommendations', 'hospitals', ['hospital_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'hospital_recommendations', 'model_inference_results', ['inference_result_id'], ['id'], ondelete='CASCADE')
    op.alter_column('hospitals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospitals', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_subcategories', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('medical_equipment_subcategories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_subcategories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('medical_equipment_subcategories_code_key', 'medical_equipment_subcategories', type_='unique')
    op.drop_constraint('medical_equipment_subcategories_name_key', 'medical_equipment_subcategories', type_='unique')
    op.create_foreign_key(None, 'model_inference_results', 'diseases', ['third_disease_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'model_inference_results', 'diseases', ['second_disease_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'model_inference_results', 'diseases', ['first_disease_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'model_inference_results', 'chat_messages', ['chat_message_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'model_inference_results', type_='foreignkey')
    op.drop_constraint(None, 'model_inference_results', type_='foreignkey')
    op.drop_constraint(None, 'model_inference_results', type_='foreignkey')
    op.drop_constraint(None, 'model_inference_results', type_='foreignkey')
    op.create_unique_constraint('medical_equipment_subcategories_name_key', 'medical_equipment_subcategories', ['name'])
    op.create_unique_constraint('medical_equipment_subcategories_code_key', 'medical_equipment_subcategories', ['code'])
    op.alter_column('medical_equipment_subcategories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_subcategories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_subcategories', 'category_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('medical_equipment_categories', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('medical_equipment_categories', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospitals', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospitals', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'hospital_recommendations', type_='foreignkey')
    op.drop_constraint(None, 'hospital_recommendations', type_='foreignkey')
    op.alter_column('hospital_equipment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_equipment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_equipment', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('1'))
    op.alter_column('hospital_equipment', 'equipment_subcategory_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('hospital_equipment', 'hospital_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('hospital_departments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_departments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('hospital_departments', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('hospital_departments', 'hospital_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('equipment_diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('equipment_diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('equipment_diseases', 'disease_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('equipment_diseases', 'equipment_subcategory_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('departments', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('departments', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('department_diseases', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('department_diseases', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('department_diseases', 'disease_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('department_diseases', 'department_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'chat_rooms', type_='foreignkey')
    op.alter_column('chat_rooms', 'final_disease_id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_nullable=True)
    # ### end Alembic commands ###
